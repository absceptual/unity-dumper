#pragma once
#include <iostream>

struct ListDictionary;
namespace sdk
{
	using entitylist_t = ListDictionary;

	namespace BasePlayer
	{
		inline std::size_t __menuOption_Climb = 0x240;
		inline std::size_t __menuOption_Drink = 0x298;
		inline std::size_t __menuOption_InviteToTeam = 0x2f0;
		inline std::size_t __menuOption_Menu_AssistPlayer = 0x348;
		inline std::size_t __menuOption_Menu_LootPlayer = 0x3a0;
		inline std::size_t __menuOption_Promote = 0x3f8;
		inline std::size_t __menuOption_SaltWater = 0x450;
		inline std::size_t lootPanelOverride = 0x0;
		inline std::size_t lastOpenSoundPlay = 0x4a8;
		inline std::size_t currentViewMode = 0x4ac;
		inline std::size_t selectedViewMode = 0x4b0;
		inline std::size_t lastRevivePoint = 0x4b4;
		inline std::size_t lastReviveDirection = 0x4c0;
		inline std::size_t playerModel = 0x4d0;
		inline std::size_t Frozen = 0x4d8;
		inline std::size_t voiceRecorder = 0x4e0;
		inline std::size_t voiceSpeaker = 0x4e8;
		inline std::size_t input = 0x4f0;
		inline std::size_t movement = 0x4f8;
		inline std::size_t collision = 0x500;
		inline std::size_t emptyState = 0x8;
		inline std::size_t _lookingAt = 0x508;
		inline std::size_t _lookingAtEntity = 0x510;
		inline std::size_t _lookingAtCollider = 0x518;
		inline std::size_t lookingAtPointk__BackingField = 0x520;
		inline std::size_t playerModelPrefab = 0x0;
		inline std::size_t playerCollisionPrefab = 0x0;
		inline std::size_t wakeTime = 0x52c;
		inline std::size_t needsClothesRebuild = 0x530;
		inline std::size_t wasSleeping = 0x531;
		inline std::size_t wokeUpBefore = 0x532;
		inline std::size_t wasDead = 0x533;
		inline std::size_t lastClothesHash = 0x534;
		inline std::size_t visiblePlayerList = 0x10;
		inline std::size_t craftMode = 0x18;
		inline std::size_t IsWearingDiveGoggles__BackingField = 0x538;
		inline std::size_t GestureViewModel = 0x540;
		inline std::size_t INTERACTION_TICK_RATE = 0x0;
		inline std::size_t timeSinceUpdatedLookingAt = 0x548;
		inline std::size_t nextTopologyTestTime = 0x54c;
		inline std::size_t usePressTime = 0x550;
		inline std::size_t useHeldTime = 0x554;
		inline std::size_t lookingAtTest = 0x558;
		inline std::size_t lastDeathTimeClient = 0x1c;
		inline std::size_t drinkRange = 0x0;
		inline std::size_t drinkMovementSpeed = 0x0;
		inline std::size_t cachedWaterDrinkingPoint = 0x560;
		inline std::size_t GestureCancelString = 0x0;
		inline std::size_t gestureList = 0x570;
		inline std::size_t gestureFinishedTime = 0x578;
		inline std::size_t blockHeldInputTimer = 0x57c;
		inline std::size_t currentGesture = 0x580;
		inline std::size_t disabledHeldEntity = 0x588;
		inline std::size_t nextGestureMenuOpenTime = 0x590;
		inline std::size_t lastGestureCancel = 0x594;
		inline std::size_t client_lastHelloTime = 0x598;
		inline std::size_t currentTeam = 0x5a0;
		inline std::size_t MaxTeamSizeToast = 0x20;
		inline std::size_t clientTeam = 0x5a8;
		inline std::size_t lastReceivedTeamTime = 0x5b0;
		inline std::size_t lastPresenceTeamId = 0x5b8;
		inline std::size_t lastPresenceTeamSize = 0x5c0;
		inline std::size_t playerGroupKey = 0x5c8;
		inline std::size_t playerGroupSizeKey = 0x5d0;
		inline std::size_t clActiveItem = 0x5d8;
		inline std::size_t ClientCurrentMapNote = 0x5e0;
		inline std::size_t ClientCurrentDeathNote = 0x5e8;
		inline std::size_t missions = 0x5f0;
		inline std::size_t _activeMission = 0x5f8;
		inline std::size_t modelState = 0x600;
		inline std::size_t mounted = 0x608;
		inline std::size_t nextSeatSwapTime = 0x618;
		inline std::size_t PetEntity = 0x620;
		inline std::size_t lastPetCommandIssuedTime = 0x628;
		inline std::size_t PetPrefabID = 0x62c;
		inline std::size_t PetID = 0x630;
		inline std::size_t PetWheelHasBeenOpened = 0x28;
		inline std::size_t cachedBuildingPrivilegeTime = 0x634;
		inline std::size_t cachedBuildingPrivilege = 0x638;
		inline std::size_t maxProjectileID = 0x640;
		inline std::size_t WILDERNESS = 0x0;
		inline std::size_t MONUMENT = 0x0;
		inline std::size_t BASE = 0x0;
		inline std::size_t FLYING = 0x0;
		inline std::size_t BOATING = 0x0;
		inline std::size_t SWIMMING = 0x0;
		inline std::size_t DRIVING = 0x0;
		inline std::size_t lastUpdateTime = 0x644;
		inline std::size_t cachedThreatLevel = 0x648;
		inline std::size_t serverTickRateDefault = 0x0;
		inline std::size_t clientTickRateDefault = 0x0;
		inline std::size_t serverTickRate = 0x64c;
		inline std::size_t clientTickRate = 0x650;
		inline std::size_t serverTickInterval = 0x654;
		inline std::size_t clientTickInterval = 0x658;
		inline std::size_t lastSentTickTime = 0x65c;
		inline std::size_t lastTickStopwatch = 0x660;
		inline std::size_t lastSentTick = 0x668;
		inline std::size_t nextVisThink = 0x670;
		inline std::size_t lastTimeSeen = 0x674;
		inline std::size_t debugPrevVisible = 0x678;
		inline std::size_t fallDamageEffect = 0x680;
		inline std::size_t drownEffect = 0x688;
		inline std::size_t playerFlags = 0x690;
		inline std::size_t eyes = 0x698;
		inline std::size_t inventory = 0x6a0;
		inline std::size_t blueprints = 0x6a8;
		inline std::size_t metabolism = 0x6b0;
		inline std::size_t modifiers = 0x6b8;
		inline std::size_t playerCollider = 0x6c0;
		inline std::size_t Belt = 0x6c8;
		inline std::size_t playerRigidbody = 0x6d0;
		inline std::size_t userID = 0x6d8;
		inline std::size_t UserIDString = 0x6e0;
		inline std::size_t gamemodeteam = 0x6e8;
		inline std::size_t reputation = 0x6ec;
		inline std::size_t _displayName = 0x6f0;
		inline std::size_t _lastSetName = 0x6f8;
		inline std::size_t crouchSpeed = 0x0;
		inline std::size_t walkSpeed = 0x0;
		inline std::size_t runSpeed = 0x0;
		inline std::size_t crawlSpeed = 0x0;
		inline std::size_t playerColliderStanding = 0x700;
		inline std::size_t playerColliderDucked = 0x714;
		inline std::size_t playerColliderCrawling = 0x728;
		inline std::size_t playerColliderLyingDown = 0x73c;
		inline std::size_t cachedProtection = 0x750;
		inline std::size_t oldCameraFix = 0x29;
		inline std::size_t lastHeadshotSoundTime = 0x758;
		inline std::size_t nextColliderRefreshTime = 0x75c;
		inline std::size_t clothingBlocksAiming = 0x760;
		inline std::size_t clothingMoveSpeedReduction = 0x764;
		inline std::size_t clothingWaterSpeedBonus = 0x768;
		inline std::size_t clothingAccuracyBonus = 0x76c;
		inline std::size_t equippingBlocked = 0x770;
		inline std::size_t eggVision = 0x774;
		inline std::size_t activeTelephone = 0x778;
		inline std::size_t designingAIEntity = 0x780;
	}
	namespace BaseEntity
	{
		inline std::size_t ragdoll = 0x78;
		inline std::size_t positionLerp = 0x80;
		inline std::size_t menuOptions = 0x88;
		inline std::size_t globalBroadcastQueue = 0x0;
		inline std::size_t globalBroadcastProtocol = 0x8;
		inline std::size_t broadcastProtocol = 0x90;
		inline std::size_t links = 0x98;
		inline std::size_t linkedToNeighbours = 0xa0;
		inline std::size_t MaxFileRequestsPerSecond = 0x0;
		inline std::size_t QueuedFileRequests = 0x10;
		inline std::size_t _fileRequestCounter = 0x18;
		inline std::size_t _flushQueuedFileRequests = 0x30;
		inline std::size_t _pendingFileRequests = 0xa8;
		inline std::size_t updateParentingAction = 0xb0;
		inline std::size_t addedToParentEntity = 0xb8;
		inline std::size_t itemSkin = 0xc0;
		inline std::size_t entitySlots = 0xc8;
		inline std::size_t triggers = 0xd0;
		inline std::size_t isVisible = 0xd8;
		inline std::size_t isAnimatorVisible = 0xd9;
		inline std::size_t isShadowVisible = 0xda;
		inline std::size_t localOccludee = 0xe0;
		inline std::size_t weight__BackingField = 0x100;
		inline std::size_t bounds = 0x104;
		inline std::size_t impactEffect = 0x120;
		inline std::size_t enableSaving = 0x128;
		inline std::size_t syncPosition = 0x129;
		inline std::size_t model = 0x130;
		inline std::size_t flags = 0x138;
		inline std::size_t parentBone = 0x13c;
		inline std::size_t skinID = 0x140;
		inline std::size_t _components = 0x148;
		inline std::size_t HasBrain = 0x150;
		inline std::size_t _name = 0x158;
		inline std::size_t OwnerID = 0x160;
	}
	namespace BaseNetworkable
	{
		inline std::size_t JustCreated = 0x18;
		inline std::size_t entityDestroy = 0x20;
		inline std::size_t postNetworkUpdateComponents = 0x28;
		inline std::size_t parentEntity = 0x30;
		inline std::size_t children = 0x40;
		inline std::size_t canTriggerParent = 0x48;
		inline std::size_t prefabID = 0x4c;
		inline std::size_t globalBroadcast = 0x50;
		inline std::size_t net = 0x58;
		inline std::size_t IsDestroyed = 0x60;
		inline std::size_t _prefabName = 0x68;
		inline std::size_t _prefabNameWithoutExtension = 0x70;
		inline std::size_t clientEntities = 0x0;
		inline std::size_t isServersideEntity = 0x0;
	}
}
